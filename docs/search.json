{
  "articles": [
    {
      "path": "about.html",
      "title": "About Me",
      "description": "Musings of an academic without a PhD.",
      "author": [],
      "contents": "\n\n\nAcademic\nBA, Mathematics, University of Montana, 2009\nMS, Mathematics, Portland State University, 2011\nCV\nBy profession I’m an academic. I started my career in January 2012. I’ve been a contingent faculty member the entire time. I currently teach as an adjunct associate professor at Pierce College and as a resident instructor at Pacific Lutheran University.\nAside from teaching but still under the academic umbrella, I am a contributor with OpenIntro. Specifically I help maintain a repository for R tutorials and I serve as the Data Management Lead. Fancy title that means I maintain an internal R package that serves as an intermediary between a team of volunteers, Data Hunters, and the {openintro} and {usdata} R packages. The Data Hunters compile and cultivate real world data sets for inclusion in the textbook and supplementary materials. If you’re interested in becoming a Data Hunter, please email me!\nRunner\nIn another life, I was a retail store manager at a local Fleet Feet. I spent years running 50+ miles per week and competing in races ranging from 5k’s to 100 miles (* only one of those). At one point I was even a member of (now defunct) PowerBar TeamElite. I still run but I’m not so fast anymore.\nTech Enthusiast\nI have always enjoyed technology. I like to tinker and to keep things running as long as possible and - when I can find the time and resources - to refurbish old computers for those in need.\nI am currently (May 2023) have a few refurbish project in the works. My personal hardware includes a Mac Mini (M1), MacBook Air (M1), Dell G3 and - for trouble shooting student issues - an old Chromebook.\nI am slowly getting into mechanical keyboards too. I haven’t built one from scratch just yet. I currently have two Keychron keyboards; a K4 with Gateron brown switches and a K6 with Gateron blue switches.\n\n\n\n",
      "last_modified": "2023-05-17T12:11:51-07:00"
    },
    {
      "path": "art.html",
      "title": "Rtistry",
      "description": "Generative art created in R",
      "author": [],
      "contents": "\nMiscellaneous Art\n\n\n\n{flametree}\nAn R package for generative art by djnavarro\n\n\n\n\n\n\n\n\n\n\n\n\n",
      "last_modified": "2023-05-17T12:02:45-07:00"
    },
    {
      "path": "index.html",
      "title": "Posts",
      "author": [],
      "contents": "\n\n\n\n",
      "last_modified": "2023-05-17T12:02:46-07:00"
    },
    {
      "path": "open_source_workflow.html",
      "title": "GitHub & RStudio",
      "description": "Contributing to open source projects",
      "author": [],
      "contents": "\nThis page will walk you through a workflow for contributing to open source projects with RStudio and GitHub. Specifically we will learn to fork/clone a GitHub repo, create a new branch, make changes and complete a pull request. Note: most - but not all - open source projects will follow a similar workflow. Be sure to go over the README for the project you want to contribute to as it will likely tell you their specific workflow.\nNecessary packages\nTo follow this workflow you will need usethis, gitcreds and gh. If you will be working in package development, you may wish to install devtools in place of the last two - they’re included as dependent packages.\nLinking GitHub and RStudio\nIf you already have GitHub and RStudio linked you may skip to the next section. You may also skip any steps that are already completed.\nStep 1: Installing Git\nHead over to the git and download the latest version of git. The monitor on the right side of the screen should automatically detect your operating system and provide a link to the latest version (see image below). Note: if you have a Mac, a binary package of git is included with Xcode.\nA screenshot of the git homepageStep 2: Create a GitHub account\nNext, navigate to GitHub and create an account. The free account provides enough resources for the majority of users. Once complete, be sure to write down the email you used to register and your GitHub username as you’ll need them in the next step.\nStep 3: Setting up your Git credentials\nThis step can be completed in either Terminal (Linux/Mac), Command Prompt (Windows) or the Terminal tab in RStudio.\nRun each of the following commands sequentially, replacing your username and email where appropriate.\n\ngit config --global user.name \"your_github_user_name\"\ngit config --global user.email \"email_for_github_login\"\ngit config --list\n\nThe first two of these commands ties your machine to your GitHub account. The last one confirms the first two ran correctly by displaying the current Git configuration. If you use multiple development environments, you only need to run this process once! No need to redo it for each one.\nStep 4: Linking RStudio and GitHub\nNow that your computer is associated with your GitHub account, we need to give RStudio permission to access your repositories. The commands here are R commands so we’ll run them in the Console tab of RStudio.\nThe first command will open a web browser to a page that will help generate a Personal Access Token or PAT (see image below). If you’re not already logged in to GitHub, you will see a login screen first.\n\n`usethis::create_github_token()\n\nA screenshot of the PAT creation page on GitHubIn the Note field, I recommend a descriptive label that will remind you what that token is for. The default is “R:GITHUB_PAT”; instead I would use “RStudio_laptop” or “RStudio_home-office”. When to set the expiration for your PAT is up to you. If it is for a short project or on a work device, I would recommend a relatively short expiration. The maximum is one year. After you’ve generated your token, copy it to the clipboard and head back to RStudio for the next line of code.\n\ngitcreds::gitcreds_set()\n\nThis will prompt you to enter your token. Paste it into the console and press enter. The following line of code will confirm that we’ve completed our setup.\n\ngh::gh_whoami()\n\nYou should see your name, login, html_url, scopes (set during the token generation) and the token. Note only the first three and last four characters of the token are printed. No we’re ready to contribute to a project!\nContributing to a project\nFor this section, we’ll be contributing to a demo repository. Code in this section will be run in the Console tab unless otherwise specified.\nFork and clone\nFirst, we need to fork and clone the project we wish to contribute to.\n\nusethis::create_from_github(\"npaterno/learning_git\", fork = TRUE)\n\nThis will do two things. First, it will fork the repository in GitHub. This means is will create a carbon copy of the original repository under your user account. You can make changes to this repository as much as you like without changing code in the main repo, called the upstream repository.\nSecond, it will clone your forked repository into a new directory on your machine - the origin repository - that is linked to your carbon copy repository - the remote repository.\nBranching\nNext, we want to create a new temporary branch to make our changes. This allows us to make a change to the repository without - potentially - causing problems in the main branch. In practice, this allows developers to add features or implement bug fixes and test them without accidentally breaking production code. If they do break code, its ok because its isolated on the new branch.\n\nusethis::pr_init(branch = \"branch-name\")\n\nYou want to use an informative branch name. There are a few naming conventions floating around the web but a fairly standard one is type_description or author_type_description. For this example, I would use either feature_added-new-user or npaterno_feature_added-new-user.\nOpen the “user.txt” file. On a new line, add your github username, an approximate location and your favorite morning beverage. Then save the file and transition to the terminal tab.\nCommitting changes\nRun the code below in sequence.\n\ngit add user.txt\ngit commit -m \"new-user: *your_user_name*\"\ngit push origin main\n\nPull Requests (PR)\nNow that we’ve updated our carbon copy repo, we want to request that the maintainer(s) of the parent repo merges our changes. Before doing so, its a good idea to run this:\n\nusethis::pr_pause()\n\nThis will freeze your temporary branch and merge and changes that have been made to the parent repo to ensure that you are branching from the most up-to-date version of the parent repo. Now we’re ready to push our pull request to GitHub.\n\nusethis::pr_resume()\nusethis::pr_push()\n\nThis will open up a GitHub page. Click on the green “Create pull request” button. Fill out the form and press “Create pull request” a second time. This will submit a pull request to the maintainer(s) of the parent repo. They will either merge your request or possibly ask that you make some changes to the PR before it is merged.\nOnce the maintainer(s) have merged your PR, you should receive an email stating as much. Once you have that email, hop back into RStudio and run this in the console:\n\nusethis::pr_finish()\n\nThis will do a few things: switch to your main branch, pull changes from down to your local machine, delete your local temporary branch = and delete your remote temporary branch. Your changes now live on the main branch of the parent repo and your carbon copy has been updated to reflect the changes. Congratulations! You’ve made your first contribution to an open source project!\n\n\n\n",
      "last_modified": "2023-05-17T12:02:46-07:00"
    },
    {
      "path": "r_resources.html",
      "title": "Resources for Learning R",
      "description": "A list of links that may be useful for learning to code in R.",
      "author": [],
      "contents": "\nIf any section is missing a resource that you found useful please let me know so I can add it to this list!\nOnline Development Environments:\nRStudio Cloud\nGoogle Colab\nJupyter Notebooks\nDesktop Development Environments\nRStudio\nJupyter Notebooks\nVS Code\nBooks\nFree online books for learning R.\nModernDive\nR for Data Science\nReadings and Tutorials\nThis section has links to articles, blogs, cheatsheets, tutorials, forums, etc.\nInstalling R and RStudio on Windows\nInstalling R and RStudio on a Mac Includes both Intel and M1 Macs.\nR4DS Online Learning Community: This is a community that was born from a book club for the above text. There is a very active Slack for this group as well as the website.\nlearnR: These tutorials can be followed online or in RStudio.\nintroverse\nProject-oriented Workflow This article gives a few great examples of why a project-oriented workflow is very useful and efficient.\nRStudio Cheatsheets\nR Colors\nggplot Shapes\nR4DS: TidyTuesday: you can also search Twitter for #tidytuesday\nggplot2 workshop\nVersion Control with Git and GitHub\nIf you’ve never contributed to an open source project on GitHub, this tutorial will walk you through the process using R and RStudio. For those who are more visual learners, below are a few screencasts I made on how to sync RStudio and GitHub. Both videos were created for the data_hunters at the OpenIntro Project. If you’re interested in joining please email me!\nFor Windows Everything after the 5:40 mark is for the data_hunters.\nFor Mac Everything after the 4:10 mark is for the data_hunters.\nGitHub & RStudio: Contributing to open source projects on GitHub from RStudio.\nStreaming\n#SLICED: This is a live, data science competition. For those who are more visual, this is a great way to watch people who use R on a regular basis and see their process.\nJesse Mostipak: Jesse streams a few times per week on Twitch and has participated in #SLICED.\nMoriah Taylor: Moriah streams her work on for TidyTuesday projects.\nDavid Robinson: David usually streams once per week and has also participated in #SLICED.\nJulia Silge: Julia also streams her TidyTuesday projects. She usually focuses on modeling in addition to data viz. She has also been involved with #SLICED.\n\n\n\n",
      "last_modified": "2023-05-17T12:02:46-07:00"
    },
    {
      "path": "resources.html",
      "title": "Resources",
      "description": "Resources for anyone interested in learning R or LaTeX.",
      "author": [],
      "contents": "\nR Resources\nLaTeX Resources Under development\n\n\n\n",
      "last_modified": "2023-05-17T12:02:47-07:00"
    },
    {
      "path": "slides.html",
      "title": "Slides",
      "description": "Slidedecks for courses at PLU\n",
      "author": [],
      "contents": "\n\n\n\n\n\n\n\nMath/Stat 242\n\n\n\n\nGetting Started with R and RStudio\n\nA walkthrough of installing R and RStudio on Windows and Mac including a bit of customizing RStudio's appearance.\n\n\n\nMath/Stat 242\n\n\n\n\nProject Based Workflow\n\nA short discussion on the importance of project based workflows. (Illustration by Allison Horst)\n\n\n\nMath/Stat 242\n\n\n\n\nGit R Done\n\nGetting Git/GitHub and R/RStudio to communicate to make your project based workflow more efficient.\n\n\n\nStat 231\n\n\n\n\nOpenIntro\n\nThis site hosts all the slides from OpenIntro Statistics\n\n\n\n\n\n\n\n\n\n\n\n",
      "last_modified": "2023-05-17T12:02:47-07:00"
    },
    {
      "path": "talks.html",
      "title": "Talks",
      "description": "Slides for Talks",
      "author": [],
      "contents": "\nCascadia R Conference: 7/5/2021\n-Teaching Non-STEM Student to Code\n– blog post\n– slides\nPLU Mathematics Seminar: 9/29/2021\n-Generative Art: Creating art with the R programming language\n– slides\n\n\n\n",
      "last_modified": "2023-05-17T12:02:48-07:00"
    },
    {
      "path": "two_four_two.html",
      "title": "Stat 242: Introduction to Mathematical Statistics",
      "description": "Course materials for Math/Stat 242",
      "author": [],
      "contents": "\nCourse Goals\n(Largely adapted from my colleague Dr. Justice)\nBy the end of this course, students will be able to navigate data-based claims that permeate our society and develop expertise to make informed data-based decisions. More specifically, students will:\nGain insight into the statistical process as they execute a basic statistical study\nDevelop expertise interpreting and critiquing a statistical study\nUnderstand the basics and importance of statistical computing\nCourse Materials\nOur textbook is Introduction to Modern Statistics 1st Ed..\nWe will have a total of 5 computer labs using R and RStudio. There will be dedicated class time to installing the software or setting up a cloud account. Those who feel comfortable doing so can download R and RStudio prior to the start of class.\nThe weekly schedule and other resources can be found on our Sakai site.\nR Package\nAll materials needed for lab days can be found in the stat242 R package (package under construction as of 7/14/21). Students can install the package by running the code below in the console of RStudio (requires the `remotes`` package). As with R and RStudio, there will be dedicated time in class for this activity.\n\ninstall.packages(“remotes”)\n\n\nremotes::install_github(“npaterno/stat242”, build_vignettes = TRUE)\n\nEach lesson related to the statistical computing part of the course can be found as a vignette in the help file or as a slidedeck. The corresponding assignments are available as RMarkdown templates.\n\n\n\n",
      "last_modified": "2023-05-17T12:02:48-07:00"
    },
    {
      "path": "two_three_one.html",
      "title": "Stat 231: Introductory Statistics",
      "description": "Course materials for Stat 231",
      "author": [],
      "contents": "\nCourse Goals\nThis is a first course in statistics designed for non-STEM majors. An emphasis is placed on a broad understanding of topics in sampling methods, basic probability, hypothesis testing, confidence intervals and linear regression. Students will also be introduced to statistical computing.\nCourse Materials\nOur textbook is OpenIntro Statistics: 4th Ed..\nA graphing calculator will be useful for some of the computations we will do. Specifically instruction will be provided for the Ti-83/84 and Casio FX-750GII.\nWe will have a total of seven computer labs using R and RStudio. There will be dedicated class time to installing the software or setting up a cloud account. Those who feel comfortable doing so can download R and RStudio prior to the start of class.\nThe weekly schedule and other resources can be found on our Sakai site.\nR Package\nAll materials needed for lab days can be found in the Stat231 R package. Students can install the package by running the code below in the console of RStudio (requires the `remotes`` package). As with R and RStudio, there will be dedicated time in class for this activity.\n\ninstall.packages(“remotes”)\n\n\nremotes::install_github(“npaterno/stat231”, build_vignettes = TRUE)\n\nEach lesson can be found as a vignette in the help file. The corresponding assignments are available as RMarkdown templates.\nSlides related to the labs and/or in class lectures can be found here.\n\n\n\n",
      "last_modified": "2023-05-17T12:02:48-07:00"
    }
  ],
  "collections": ["posts/posts.json"]
}
