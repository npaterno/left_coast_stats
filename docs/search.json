{
  "articles": [
    {
      "path": "about.html",
      "title": "About Me",
      "description": "Musings of an academic without a PhD.",
      "author": [],
      "contents": "\n\nAcademic\nBA, Mathematics, University of Montana, 2009\nMS, Mathematics, Portland State University, 2011\nCV\nBy profession I’m an academic. I started my career in January 2012.\nI’ve been a contingent faculty member the entire time. I currently teach\nas an adjunct associate professor at Pierce College and as a resident\ninstructor at Pacific Lutheran\nUniversity.\nAside from teaching but still under the academic umbrella, I am a\ncontributor with OpenIntro.\nSpecifically I serve as the Data Management Lead. Fancy title that means\nI maintain an internal R package that serves as an intermediary between\na team of volunteers, Data Hunters, and the {openintro} and {usdata} R\npackages. The Data Hunters compile and cultivate real world data sets\nfor inclusion in the textbook and supplementary materials. If you’re\ninterested in becoming a Data Hunter, please email me!\nRunner\nIn another life, I was a retail store manager at a local Fleet Feet.\nI spent years running 50+ miles per week and competing in races ranging\nfrom 5k’s to 100 miles (* only one of those). At one point I was even a\nmember of (now defunct) PowerBar TeamElite. I still run but I’m not so\nfast anymore.\nTech Enthusiast\nI have always enjoyed technology. I like to tinker and to keep things\nrunning as long as possible and - when I can find the time and resrouces\n- to refurbish old computers for those in need.\nCurrent Setup(s)\nLaptop\nDell G3 3590\nCPU: Intel Core i7-9750h\nMemory: 32 GB Crucial Ballistix DDR4-2666\nStorage (boot): 500 GB Samsung 970 EVO m.2 nvme ssd\nStorage: 1 TB Seagate hdd\nWiFi: 802.11ax\nGraphics: Nvidia GeForce GTX 1650\nMacbook Air\nCPU: Apple M1\nMemory: 16GB\nStorage: 256 GB ssd\nWiFi: 802.11ax\nDesktop\nApple Mac Mini\nCPU: Apple M1\nMemory: 16 GB\nStorage: 2 TB ssd\nWiFi: 802.11ax\nPeripherals\nKeyboard: Keychron K4 (Gateron Brown switches)\nKeyboard: Keychron K6 (Gateron Blue switches)\nMouse: Corsair Harpoon\nMonitors: 2 x Dell 27”\nNAS\nSynology DS 220j\n2 x 4 TB Seagate Ironwolf (raid 1)\n\n\n\n",
      "last_modified": "2022-06-15T14:09:32-07:00"
    },
    {
      "path": "art.html",
      "title": "Rtistry",
      "description": "Generative art created in R",
      "author": [],
      "contents": "\nMiscellaneous Art\n\n\n\n{flametree}\nAn R package for generative art by djnavarro\n\n\n\n\n\n\n\n\n\n\n\n\n",
      "last_modified": "2022-06-15T14:09:42-07:00"
    },
    {
      "path": "index.html",
      "title": "Posts",
      "author": [],
      "contents": "\n\n\n\n",
      "last_modified": "2022-06-15T14:09:43-07:00"
    },
    {
      "path": "open_source_workflow.html",
      "title": "GitHub & RStudio",
      "description": "Contributing to open source projects",
      "author": [],
      "contents": "\nThis page will walk you through a workflow for contributing to open\nsource projects with RStudio and GitHub. Specifically we will learn to\nfork/clone a GitHub repo, create a new branch, make changes and complete\na pull request. Note: most - but not all - open source projects will\nfollow a similar workflow. Be sure to go over the README for the project\nyou want to contribute to as it will likely tell you their specific\nworkflow.\nNecessary packages\nTo follow this workflow you will need usethis,\ngitcreds and gh. If you will be working in\npackage development, you may wish to install devtools in\nplace of the last two - they’re included as dependent packages.\nLinking GitHub and RStudio\nIf you already have GitHub and RStudio linked you may skip to the\nnext section. You may also skip any steps that are already\ncompleted.\nStep 1: Installing Git\nHead over to the git and download\nthe latest version of git. The monitor on the right side of the screen\nshould automatically detect your operating system and provide a link to\nthe latest version (see image below). Note: if you have a Mac, a binary\npackage of git is included with Xcode.\nA screenshot of the git\nhomepageStep 2: Create a GitHub\naccount\nNext, navigate to GitHub and create\nan account. The free account provides enough resources for the majority\nof users. Once complete, be sure to write down the email you used to\nregister and your GitHub username as you’ll need them in the next\nstep.\nStep 3: Setting up your\nGit credentials\nThis step can be completed in either Terminal (Linux/Mac), Command\nPrompt (Windows) or the Terminal tab in RStudio.\nRun each of the following commands sequentially, replacing your\nusername and email where appropriate.\n\ngit config --global user.name \"your_github_user_name\"\ngit config --global user.email \"email_for_github_login\"\ngit config --list\n\nThe first two of these commands ties your machine to your GitHub\naccount. The last one confirms the first two ran correctly by displaying\nthe current Git configuration. If you use multiple development\nenvironments, you only need to run this process once! No need to redo it\nfor each one.\nStep 4: Linking RStudio and\nGitHub\nNow that your computer is associated with your GitHub account, we\nneed to give RStudio permission to access your repositories. The\ncommands here are R commands so we’ll run them in the\nConsole tab of RStudio.\nThe first command will open a web browser to a page that will help\ngenerate a Personal Access Token or PAT (see image below). If you’re not\nalready logged in to GitHub, you will see a login screen first.\n\n`usethis::create_github_token()\n\nA screenshot of the PAT creation page on\nGitHubIn the Note field, I recommend a descriptive label that will\nremind you what that token is for. The default is “R:GITHUB_PAT”;\ninstead I would use “RStudio_laptop” or “RStudio_home-office”. When to\nset the expiration for your PAT is up to you. If it is for a short\nproject or on a work device, I would recommend a relatively short\nexpiration. The maximum is one year. After you’ve generated your token,\ncopy it to the clipboard and head back to RStudio for the next line of\ncode.\n\ngitcreds::gitcreds_set()\n\nThis will prompt you to enter your token. Paste it into the console\nand press enter. The following line of code will confirm that we’ve\ncompleted our setup.\n\ngh::gh_whoami()\n\nYou should see your name, login, html_url, scopes (set during the\ntoken generation) and the token. Note only the first three and last four\ncharacters of the token are printed. No we’re ready to contribute to a\nproject!\nContributing to a project\nFor this section, we’ll be contributing to a demo repository. Code in\nthis section will be run in the Console tab unless otherwise\nspecified.\nFork and clone\nFirst, we need to fork and clone the project we wish to contribute\nto.\n\nusethis::create_from_github(\"npaterno/learning_git\", fork = TRUE)\n\nThis will do two things. First, it will fork the repository in\nGitHub. This means is will create a carbon copy of the original\nrepository under your user account. You can make changes to this\nrepository as much as you like without changing code in the main repo,\ncalled the upstream repository.\nSecond, it will clone your forked repository into a new directory on\nyour machine - the origin repository - that is linked to your\ncarbon copy repository - the remote repository.\nBranching\nNext, we want to create a new temporary branch to make our changes.\nThis allows us to make a change to the repository without - potentially\n- causing problems in the main branch. In practice, this allows\ndevelopers to add features or implement bug fixes and test them without\naccidentally breaking production code. If they do break\ncode, its ok because its isolated on the new branch.\n\nusethis::pr_init(branch = \"branch-name\")\n\nYou want to use an informative branch name. There are a few naming\nconventions floating around the web but a fairly standard one is\ntype_description or\nauthor_type_description. For this example, I would use\neither feature_added-new-user or\nnpaterno_feature_added-new-user.\nOpen the “user.txt” file. On a new line, add your github username, an\napproximate location and your favorite morning beverage. Then save the\nfile and transition to the terminal tab.\nCommitting changes\nRun the code below in sequence.\n\ngit add user.txt\ngit commit -m \"new-user: *your_user_name*\"\ngit push origin main\n\nPull Requests (PR)\nNow that we’ve updated our carbon copy repo, we want to request that\nthe maintainer(s) of the parent repo merges our changes. Before doing\nso, its a good idea to run this:\n\nusethis::pr_pause()\n\nThis will freeze your temporary branch and merge and changes that\nhave been made to the parent repo to ensure that you are branching from\nthe most up-to-date version of the parent repo. Now we’re ready to push\nour pull request to GitHub.\n\nusethis::pr_resume()\nusethis::pr_push()\n\nThis will open up a GitHub page. Click on the green “Create pull\nrequest” button. Fill out the form and press “Create pull request” a\nsecond time. This will submit a pull request to the maintainer(s) of the\nparent repo. They will either merge your request or possibly ask that\nyou make some changes to the PR before it is merged.\nOnce the maintainer(s) have merged your PR, you should receive an\nemail stating as much. Once you have that email, hop back into RStudio\nand run this in the console:\n\nusethis::pr_finish()\n\nThis will do a few things: switch to your main branch, pull changes\nfrom down to your local machine, delete your local temporary branch =\nand delete your remote temporary branch. Your changes now live on the\nmain branch of the parent repo and your carbon copy has been updated to\nreflect the changes. Congratulations! You’ve made your first\ncontribution to an open source project!\n\n\n\n",
      "last_modified": "2022-06-15T14:09:43-07:00"
    },
    {
      "path": "resources.html",
      "title": "Resources for Learning R",
      "description": "A list of links that may be useful for learning to code in R.",
      "author": [],
      "contents": "\nIf any section is missing a resource that you found useful please\nlet me know so I can add\nit to this list!\nOnline Development\nEnvironments:\nRStudio Cloud\nGoogle Colab\nJupyter\nNotebooks\nDesktop Development\nEnvironments\nRStudio\nJupyter Notebooks\nVS Code\nBooks\nFree online books for learning R.\nModernDive\nR for Data Science\nReadings and Tutorials\nThis section has links to articles, blogs, cheatsheets, tutorials,\nforums, etc.\nInstalling R and RStudio on\nWindows\nInstalling R and RStudio on a\nMac Includes both Intel and M1 Macs.\nR4DS Online Learning\nCommunity: This is a community that was born from a book club for\nthe above text. There is a very active Slack for this group as well as\nthe website.\nlearnR: These\ntutorials can be followed online or in RStudio.\nintroverse\nProject-oriented\nWorkflow This article gives a few great examples of why a\nproject-oriented workflow is very useful and efficient.\nRStudio\nCheatsheets\nR\nColors\nggplot\nShapes\nR4DS:\nTidyTuesday: you can also search Twitter for #tidytuesday\nggplot2\nworkshop\nVersion Control with Git\nand GitHub\nIf you’ve never contributed to an open source project on GitHub, this\ntutorial will walk you through\nthe process using R and RStudio. For those who are more visual learners,\nbelow are a few screencasts I made on how to sync RStudio and GitHub.\nBoth videos were created for the data_hunters at the\nOpenIntro Project. If you’re\ninterested in joining please email\nme!\nFor Windows Everything\nafter the 5:40 mark is for the data_hunters.\nFor Mac Everything after\nthe 4:10 mark is for the data_hunters.\nGitHub\n& RStudio: Contributing to open source projects on GitHub from\nRStudio.\nStreaming\n#SLICED:\nThis is a live, data science competition. For those who are more visual,\nthis is a great way to watch people who use R on a regular basis and see\ntheir process.\nJesse Mostipak: Jesse\nstreams a few times per week on Twitch and has participated in\n#SLICED.\nMoriah Taylor:\nMoriah streams her work on for TidyTuesday projects.\nDavid\nRobinson: David usually streams once per week and has also\nparticipated in #SLICED.\nJulia\nSilge: Julia also streams her TidyTuesday projects. She usually\nfocuses on modeling in addition to data viz. She has also been involved\nwith #SLICED.\n\n\n\n",
      "last_modified": "2022-06-15T14:09:44-07:00"
    },
    {
      "path": "slides.html",
      "title": "Slides",
      "description": "Slidedecks for courses at PLU\n",
      "author": [],
      "contents": "\n\n\n\n\n\n\n\nMath/Stat 242\n\n\n\n\nGetting Started with R and RStudio\n\nA walkthrough of installing R and RStudio on Windows and Mac including a bit of customizing RStudio's appearance.\n\n\n\nMath/Stat 242\n\n\n\n\nProject Based Workflow\n\nA short discussion on the importance of project based workflows. (Illustration by Allison Horst)\n\n\n\nMath/Stat 242\n\n\n\n\nGit R Done\n\nGetting Git/GitHub and R/RStudio to communicate to make your project based workflow more efficient.\n\n\n\nStat 231\n\n\n\n\nOpenIntro\n\nThis site hosts all the slides from OpenIntro Statistics\n\n\n\n\n\n\n\n\n\n\n\n",
      "last_modified": "2022-06-15T14:09:44-07:00"
    },
    {
      "path": "talks.html",
      "title": "Talks",
      "description": "Slides for Talks",
      "author": [],
      "contents": "\nCascadia R Conference:\n7/5/2021\n-Teaching Non-STEM Student to Code – blog\npost – slides\nPLU Mathematics Seminar:\n9/29/2021\n-Generative Art: Creating art with the R programming language – slides\n\n\n\n",
      "last_modified": "2022-06-15T14:09:44-07:00"
    },
    {
      "path": "two_four_two.html",
      "title": "Stat 242: Introduction to Mathematical Statistics",
      "description": "Course materials for Math/Stat 242",
      "author": [],
      "contents": "\nCourse Goals\n(Largely adapted from my colleague Dr. Justice)\nBy the end of this course, students will be able to navigate\ndata-based claims that permeate our society and develop expertise to\nmake informed data-based decisions. More specifically, students\nwill:\nGain insight into the statistical process as they execute a basic\nstatistical study\nDevelop expertise interpreting and critiquing a statistical\nstudy\nUnderstand the basics and importance of statistical\ncomputing\nCourse Materials\nOur textbook is Introduction to\nModern Statistics 1st Ed..\nWe will have a total of 5 computer labs using R and RStudio. There\nwill be dedicated class time to installing the software or setting up a\ncloud account. Those who feel comfortable doing so can download R and RStudio prior to the start\nof class.\nThe weekly schedule and other resources can be found on our Sakai\nsite.\nR Package\nAll materials needed for lab days can be found in the stat242 R package\n(package under construction as of 7/14/21). Students can\ninstall the package by running the code below in the console of RStudio\n(requires the `remotes`` package). As with R and RStudio, there will be\ndedicated time in class for this activity.\n\ninstall.packages(“remotes”)\n\n\nremotes::install_github(“npaterno/stat242”, build_vignettes =\nTRUE)\n\nEach lesson related to the statistical computing part of the course\ncan be found as a vignette in the help file or as a slidedeck.\nThe corresponding assignments are available as RMarkdown templates.\n\n\n\n",
      "last_modified": "2022-06-15T14:09:45-07:00"
    },
    {
      "path": "two_three_one.html",
      "title": "Stat 231: Introductory Statistics",
      "description": "Course materials for Stat 231",
      "author": [],
      "contents": "\nCourse Goals\nThis is a first course in statistics designed for non-STEM majors. An\nemphasis is placed on a broad understanding of topics in sampling\nmethods, basic probability, hypothesis testing, confidence intervals and\nlinear regression. Students will also be introduced to statistical\ncomputing.\nCourse Materials\nOur textbook is OpenIntro\nStatistics: 4th Ed..\nA graphing calculator will be useful for some of the computations we\nwill do. Specifically instruction will be provided for the Ti-83/84 and\nCasio FX-750GII.\nWe will have a total of seven computer labs using R and RStudio.\nThere will be dedicated class time to installing the software or setting\nup a cloud account. Those who feel comfortable doing so can download R and RStudio prior to the start\nof class.\nThe weekly schedule and other resources can be found on our Sakai\nsite.\nR Package\nAll materials needed for lab days can be found in the Stat231 R package.\nStudents can install the package by running the code below in the\nconsole of RStudio (requires the `remotes`` package). As with R and\nRStudio, there will be dedicated time in class for this activity.\n\ninstall.packages(“remotes”)\n\n\nremotes::install_github(“npaterno/stat231”, build_vignettes =\nTRUE)\n\nEach lesson can be found as a vignette in the help file. The\ncorresponding assignments are available as RMarkdown templates.\nSlides\nrelated to the labs and/or in class lectures can be found here.\n\n\n\n",
      "last_modified": "2022-06-15T14:09:45-07:00"
    }
  ],
  "collections": ["posts/posts.json"]
}
